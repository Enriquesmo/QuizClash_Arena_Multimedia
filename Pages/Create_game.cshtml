@page
@model QuizClash_Arena_Multimedia.Pages.CreateGameModel
@{
    ViewData["Title"] = "Crear Partida";
}

<style>
    body {
        background-image: url('/images/fondo_azul.png');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        font-family: Arial, sans-serif;
        color: white;
        margin: 0;
        padding: 0;
    }

    .container {
        text-align: center;
        margin: 30px auto; 
        padding: 10px;
        max-width: 800px; 
        height: auto; /
        background: rgba(0, 0, 0, 0.6);
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
        overflow-y: auto; 
    }


    h1 {
        font-size: 3em;
        margin-bottom: 20px;
        background: linear-gradient(90deg, #ff6699, #ffcc00);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    }

    h2 {
        font-size: 1.5em;
        margin-bottom: 20px;
        color: #ffcc00;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
    }

    .players-gallery,
    .avatar-gallery {
        display: flex;
        justify-content: center;
        gap: 15px;
        flex-wrap: wrap;
    }

    .player-option,
    .avatar-option {
        position: relative;
        width: 80px;
        height: 80px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(255, 255, 255, 0.1);
        border: 3px solid transparent;
        border-radius: 50%;
        color: #ffffff;
        font-size: 1.5em;
        font-weight: bold;
        cursor: pointer;
        transition: transform 0.3s, box-shadow 0.3s, background-color 0.3s;
    }

        .player-option:hover,
        .avatar-option:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);
            background-color: rgba(255, 255, 255, 0.2);
        }

        .player-option.selected,
        .avatar-option.selected {
            border-color: #ffcc00;
            background-color: rgba(255, 204, 0, 0.2);
        }

            .player-option.selected::after,
            .avatar-option.selected::after {
                content: '✔';
                position: absolute;
                top: -10px;
                right: -10px;
                background: #ffcc00;
                color: black;
                font-size: 16px;
                font-weight: bold;
                border-radius: 50%;
                padding: 5px;
            }

    input[type="text"] {
        width: 80%;
        padding: 10px;
        font-size: 1.2em;
        color: #333;
        border: 2px solid #ffcc00;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
        transition: transform 0.3s, box-shadow 0.3s, background-color 0.3s;
    }

        input[type="text"]:focus {
            outline: none;
            transform: scale(1.05);
            box-shadow: 0 6px 12px rgba(255, 204, 0, 0.7);
            background-color: rgba(255, 255, 255, 0.9);
        }

    button {
        font-size: 1.2em;
        padding: 10px 20px;
        background-color: #ff6633;
        color: white;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.3s;
        margin-top: 20px;
    }

        button:hover {
            background-color: #ff4500;
            transform: scale(1.1);
        }
</style>

<div class="container">
    
    <h1>Crear Partida</h1>
    <h2>Selecciona el número de jugadores:</h2>
    <form method="post" asp-page-handler="CreateGame" id="createGameForm">
        <input type="hidden" id="webSocketId" name="WebSocketId" />
        <input type="hidden" asp-for="Twitch" />
        <!-- Selección del número de jugadores -->
        <div class="players-gallery">
            @for (int i = 2; i <= 6; i++)
            {
                <div class="player-option" data-players="@i" onclick="selectPlayers(this)">
                    @i
                </div>
            }
        </div>
        <input type="hidden" id="numPlayers" name="MaxPlayers" required>
        <br /><br />

        <!-- Entrada del nombre del jugador -->
        <input type="text" id="playerName" name="PlayerName" asp-for="PlayerName" placeholder="Introduce tu nombre" required>
        <br /><br />

        <!-- Selección del avatar -->
        <h2>Selecciona tu avatar:</h2>
        <div class="avatar-gallery">
            @for (int i = 1; i <= 8; i++)
            {
                <div class="avatar-option" data-avatar="@Url.Content($"/images/avatars/avatar_{i}.png")">
                    <img src="@Url.Content($"/images/avatars/avatar_{i}.png")" alt="Avatar @i" style="border-radius: 50%; width: 60px; height: 60px;" onclick="selectAvatar(this)">
                </div>
            }
        </div>
        <input type="hidden" id="playerAvatar" name="PlayerAvatar" required>
        <br /><br />

        <button type="submit">Crear Sala</button>
        
      

    </form>
</div>

<script>
    // Selección del número de jugadores
    function selectPlayers(element) {
        const numPlayersInput = document.getElementById("numPlayers");
        const selectedPlayers = element.getAttribute("data-players");
        numPlayersInput.value = selectedPlayers;

        // Quitar selección previa
        document.querySelectorAll(".player-option").forEach(option => option.classList.remove("selected"));
        element.classList.add("selected");
    }

    // Selección del avatar
    function selectAvatar(element) {
        const avatarInput = document.getElementById("playerAvatar");
        const selectedAvatar = element.parentElement.getAttribute("data-avatar");
        avatarInput.value = selectedAvatar;

        // Quitar selección previa
        document.querySelectorAll(".avatar-option").forEach(option => option.classList.remove("selected"));
        element.parentElement.classList.add("selected");
    }

    // Validación del formulario
    document.getElementById("createGameForm").addEventListener("submit", function (e) {
        const playerAvatar = document.getElementById("playerAvatar").value;
        const numPlayers = document.getElementById("numPlayers").value;

        if (!numPlayers || numPlayers === "") {
            e.preventDefault(); // Evitar envío del formulario
            alert("Por favor, selecciona un número de jugadores antes de continuar.");
        } else if (!playerAvatar || playerAvatar === "") {
            e.preventDefault(); // Evitar envío del formulario
            alert("Por favor, selecciona un avatar antes de continuar.");
        }
    });
</script>


     <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
     <script>
         const connection = new signalR.HubConnectionBuilder()
             .withUrl("/gameHub")
             .build();

         connection.start().then(function () {
             connection.invoke("GetConnectionId").then(function (connectionId) {
                 document.getElementById("webSocketId").value = connectionId;
             });
         }).catch(function (err) {
             return console.error(err.toString());
         });

         // Selección de número de jugadores
         document.querySelectorAll('.player-option').forEach(option => {
             option.addEventListener('click', function () {
                 document.querySelectorAll('.player-option').forEach(opt => opt.classList.remove('selected'));
                 this.classList.add('selected');
                 const selectedPlayers = this.getAttribute('data-players');
                 document.getElementById('numPlayers').value = selectedPlayers;
             });
         });

         // Selección de avatar
         document.querySelectorAll('.avatar-option').forEach(option => {
             option.addEventListener('click', function () {
                 document.querySelectorAll('.avatar-option').forEach(opt => opt.classList.remove('selected'));
                 this.classList.add('selected');
                 const avatarUrl = this.getAttribute('data-avatar');
                 document.getElementById('playerAvatar').value = avatarUrl;
             });
         });
     </script>
