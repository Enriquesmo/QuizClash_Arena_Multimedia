@page
@model QuizClash_Arena_Multimedia.Pages.upload_memesModel
@{
    ViewData["Title"] = "Subir Imágenes o Videos";
}

<!-- Incluir jQuery antes de SignalR -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script> <!-- Asegúrate de que esta referencia sea correcta -->

<style>
    /* General */
    body {
        background-image: url('/images/fondo_azul.png');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        font-family: 'Arial', sans-serif;
        color: white;
        margin: 0;
        padding: 0;
    }

    .container {
        text-align: center;
        margin: 30px auto;
        padding: 20px;
        max-width: 800px;
        background: rgba(0, 0, 0, 0.8);
        border-radius: 15px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.6);
    }

    h1 {
        font-size: 3rem;
        margin-bottom: 20px;
        background: linear-gradient(90deg, #ff6699, #ffcc00);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    }

    /* Temporizador */
    #timer {
        font-size: 3rem;
        font-weight: bold;
        color: #ffcc00;
        background-color: rgba(0, 0, 0, 0.6);
        padding: 10px 20px;
        border-radius: 10px;
        display: inline-block;
        margin-bottom: 20px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    }

    /* Campo de subida de archivos */
    input[type="file"] {
        display: block;
        margin: 20px auto;
        padding: 10px;
        font-size: 1.1rem;
        background-color: #333;
        color: white;
        border: 2px dashed #ffcc00;
        border-radius: 10px;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.3s;
    }

        input[type="file"]:hover {
            background-color: #444;
            transform: scale(1.05);
        }

    /* Botón de subir */
    button {
        font-size: 1.5rem;
        padding: 12px 25px;
        background-color: #ff4500;
        color: white;
        border: none;
        border-radius: 15px;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.3s;
    }

        button[type="submit"]:hover {
            background-color: #ff3366;
            transform: scale(1.1);
        }

    /* Imágenes cargadas */
    #uploadedMemes {
        margin-top: 20px;
    }

        /* Alinear las imágenes horizontalmente */
        #uploadedMemes ul {
            display: flex; /* Flexbox para alinear horizontalmente */
            flex-wrap: wrap; /* Permitir que las imágenes ocupen varias filas si no caben en una sola */
            justify-content: flex-start; /* Alinear al inicio del contenedor */
            gap: 15px; /* Espacio entre las imágenes */
            padding: 0;
            list-style: none;
        }

        #uploadedMemes li {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #uploadedMemes img,
        #uploadedMemes video {
            width: 600px; /* Tamaño más grande */
            height: auto;
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.6);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            #uploadedMemes img:hover,
            #uploadedMemes video:hover {
                transform: scale(1.1);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.8);
            }

    .image-preview-container {
        margin-top: 20px;
    }

    .image-preview {
        margin: 10px;
        width: 100px; /* Tamaño de la vista previa */
        height: auto;
    }
</style>


<!-- Contador de tiempo -->
<div class="container">
    <h1>Sube tus Imágenes o Videos</h1>

    <!-- Contador -->
    <div id="timer"></div>

    <!-- Formulario para subir las imágenes -->
    <form id="uploadForm" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label for="files">Seleccionar imágenes</label>
        <input type="file" id="files" name="Files" multiple onchange="previewImage(event)" class="form-control" />
    </div>

    <div id="imagePreview" class="image-preview-container">
        <!-- Vista previa de la imagen se mostrará aquí -->
    </div>

    <button type="submit" class="btn btn-primary mt-3">Subir imágenes</button>
    </form>
    <div>
        <p><strong>Código de la Sala:</strong> @Model.RoomCode</p>
        <p><strong>Nombre del Jugador:</strong> @Model.PlayerName</p>
        <p><strong>Avatar del Jugador:</strong> <img src="@Model.PlayerAvatar" style="width: 50px; height: 50px;" /></p>
    </div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Botón de redirección a MainGame -->
    <div class="mt-4">
        <button id="playGameButton" class="btn btn-success">¡Vamos a jugar ya!</button>
    </div>

    <script>
        // Redirige al archivo MainGame.cshtml al hacer clic en el botón
        document.getElementById("playGameButton").addEventListener("click", function () {
            const roomCode = '@Model.RoomCode';
            const playerName = '@Model.PlayerName';
            const playerAvatar = '@Model.PlayerAvatar';
            window.location.href = `@Url.Page("MainGame")?roomCode=${roomCode}&playerName=${playerName}&playerAvatar=${playerAvatar}`;
        });

    </script>

<script>

    // Evita que el formulario se recargue
    $('#uploadForm').on('submit', function (e) {
        e.preventDefault(); // Evita la recarga de la página

        const formData = new FormData(this);

        // Realiza la subida con AJAX
        $.ajax({
            url: '@Url.Page("upload_memes")', // URL de la página
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                // Actualiza la lista de memes subidos después de una carga exitosa
                updateUploadedMemes();
            },
            error: function (xhr, status, error) {
                console.error("Error al subir los archivos: " + error);
            }
        });
    });

    // Función para actualizar la lista de memes subidos
    function updateUploadedMemes() {
        $.get('@Url.Page("upload_memes")', function (data) {
            // Actualiza las imágenes sin recargar la página
            const memeList = $(data).find('#uploadedMemes ul');
            $('#uploadedMemes ul').html(memeList.html());
        });
    }

    // Función para previsualizar los archivos seleccionados
    function previewImage(event) {
        const files = event.target.files;
        const previewContainer = document.getElementById("imagePreview");
        previewContainer.innerHTML = '';  // Limpia cualquier vista previa anterior

        for (let i = 0; i < files.length; i++) {
            const file = files[i];
            const reader = new FileReader();

            reader.onload = function (e) {
                const img = document.createElement("img");
                img.src = e.target.result;
                img.classList.add("image-preview");
                previewContainer.appendChild(img);
            };

            reader.readAsDataURL(file);
        }
    }

    // Contador de tiempo (1 minuto y 30 segundos)
    let timeLeft = 90; // 90 segundos (1 minuto y 30 segundos)
    const timerElement = document.getElementById("timer");

    function updateTimer() {
        const minutes = Math.floor(timeLeft / 60);
        const seconds = timeLeft % 60;
        timerElement.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;

        if (timeLeft > 0) {
            timeLeft--;
        } else {
            clearInterval(timerInterval);
            alert("¡El tiempo ha terminado!");
        }
    }

    // Actualizar el contador cada segundo
    updateTimer(); // Llamar inmediatamente para mostrar el tiempo inicial
    const timerInterval = setInterval(updateTimer, 1000);
</script>