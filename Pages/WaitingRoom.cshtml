@page
@model QuizClash_Arena_Multimedia.Pages.WaitingRoomModel
@{
    ViewData["Title"] = "Sala de Espera";
}

<!-- Incluir jQuery antes de SignalR -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>

<h1 style="text-align: center;">Sala de Espera</h1>
<p style="text-align: center;">Código de la Sala: <strong>@Model.RoomCode</strong></p>

<h2 style="text-align: center;">Jugadores en la partida:</h2>
<p style="text-align: center;">Jugadores: <strong id="playerCount">0 / @Model.MaxPlayers</strong></p>
<ul id="playerList" style="text-align: center;">
    @foreach (var player in Model.Players)
    {
        <li>
            <img src="@player.AvatarUrl" style="width: 50px; height: 50px;" />
            @player.Name
        </li>
    }
</ul>

<div style="text-align: center;">
    <form method="get" asp-page="upload_memes">
        <button type="submit">Iniciar Juego</button>
    </form>
</div>

<script>
    const connection = new signalR.HubConnectionBuilder().withUrl("/gameHub").build();
    const roomCode = "@Model.RoomCode";
    const playerName = "@Model.PlayerName";
    const playerAvatar = "@Model.PlayerAvatar";
    const playerSet = new Set();
    const maxPlayers = @Model.MaxPlayers;

    connection.start().then(function () {
        console.log("Conectado al hub de SignalR");
        if (playerName && playerAvatar) {
            return connection.invoke("JoinRoom", roomCode, playerName, playerAvatar);
        }
    }).then(() => {
        if (playerName && playerAvatar) {
            console.log(`Unido a la sala: ${roomCode} como ${playerName}`);
            return connection.invoke("GetPlayersInRoom", roomCode);
        }
    }).then(players => {
        if (players) {
            players.forEach(player => {
                if (!playerSet.has(player.name)) {
                    addPlayerToList(player.name, player.avatarUrl);
                }
            });
        }
    }).catch(function (err) {
        console.error(err.toString());
    });

    connection.on("PlayerJoined", function (playerName, playerAvatar) {
        if (!playerSet.has(playerName)) {
            addPlayerToList(playerName, playerAvatar);
        }
    });

    function addPlayerToList(playerName, playerAvatar) {
        const playerList = document.getElementById("playerList");
        const listItem = document.createElement("li");

        const avatarImg = document.createElement("img");
        avatarImg.src = playerAvatar;
        avatarImg.style.width = "50px";
        avatarImg.style.height = "50px";

        listItem.appendChild(avatarImg);
        listItem.appendChild(document.createTextNode(` ${playerName}`));
        playerList.appendChild(listItem);

        playerSet.add(playerName);
        document.getElementById("playerCount").innerText = `${playerSet.size} / ${maxPlayers}`;
    }
</script>
